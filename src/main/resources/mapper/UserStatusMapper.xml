<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="graduationproject.back.mapper.UserStatusMapper">
  <resultMap id="BaseResultMap" type="graduationproject.back.model.entity.UserStatus">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="account_type" jdbcType="VARCHAR" property="accountType" />
    <result column="account_disabled" jdbcType="VARCHAR" property="accountDisabled" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, name, account_type, account_disabled
  </sql>

  <select id="getUserInfo" resultType="graduationproject.back.model.vo.GetUserInfoVo">
  SELECT
	u.user_id,
	u.name,
	u.account_type,
	u.create_time,
	us.account_disabled
FROM
	`user` u
	LEFT JOIN user_status us ON u.user_id = us.user_id
WHERE
	u.user_id = #{userId,jdbcType=VARCHAR}
  </select>

  <insert id="changeAccountDisable" parameterType="UserStatus">
    insert into user_status (id, user_id, name,
      account_type, account_disabled)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{accountType,jdbcType=VARCHAR}, #{accountDisabled,jdbcType=VARCHAR}) ON DUPLICATE KEY UPDATE
      account_disabled =#{accountDisabled,jdbcType=VARCHAR}
  </insert>

  <delete id="deleteAccountDisable">
    delete from user_status
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>






  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_status
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_status
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="graduationproject.back.model.entity.UserStatus">
    insert into user_status (id, user_id, name, 
      account_type, account_disabled)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{accountType,jdbcType=VARCHAR}, #{accountDisabled,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="graduationproject.back.model.entity.UserStatus">
    insert into user_status
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="accountDisabled != null">
        account_disabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="accountDisabled != null">
        #{accountDisabled,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="graduationproject.back.model.entity.UserStatus">
    update user_status
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="accountDisabled != null">
        account_disabled = #{accountDisabled,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="graduationproject.back.model.entity.UserStatus">
    update user_status
    set user_id = #{userId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=VARCHAR},
      account_disabled = #{accountDisabled,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>